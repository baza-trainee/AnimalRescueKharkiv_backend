volumes:
  postgres_data: {}
  redis_data: {}

services:
  postgres:
    image: postgres:16.3-alpine3.20
    container_name: ${POSTGRES_HOST}

    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

    ports:
      - "${POSTGRES_PORT}:5432"

    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready --username ${POSTGRES_USER}  --dbname ${POSTGRES_DB}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

    networks:
      - animal-rescue

    volumes:
      - postgres_data:/var/lib/postgresql/data:rw

  redis:
    image: redis:7.0-alpine
    container_name: ${REDIS_HOST}
    environment:
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
    ports:
      - "${REDIS_PORT}:6379"
    networks:
      - animal-rescue
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    profiles: [backend]
    image: animal_rescue_backend
    container_name: animal.rescue.backend
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
      - path: ./${ENV:-uat}.env
        required: false
    command: bash -c "alembic upgrade head && python3 main.py"
    volumes:
      - ./app:/app
    ports:
      - 8000:8000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - animal-rescue
    healthcheck:
      test: curl --fail http://localhost:8000/healthcheck || exit 1
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

networks:
  animal-rescue:
    driver: bridge
